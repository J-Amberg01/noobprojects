/*
Jordan Amberg
Joseph Trembley
Cole Eichacker
Samuel Kidane
Sami Bensellam
*/

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void generateWord(FILE *fileName, int fileLines);
void moveWords();l
void detectWord();

int main(){l
	char playOrAdd;
	char userAddWord[10];
	int numLines = 1000;
	int minWordLength;
	int wordLeft; //should equal how many words we have at the beginning 
	FILE *fp = fopen("wordList.txt", "r+");
	srand(time(NULL));
	generateWord(fp, numLines);

	printf("Hello, this is a typing game. You will need to type the words as they appear.\nWould you like to play or add a word?\nYou currently have %d words that can be used. (Type 'p' for play or 'a' to add words)", wordLeft);
	scanf(" %c", &playOrAdd);
		while(playOrAdd == 'a'){
		printf("Type a word that you want to add(one word, no spaces)\n");
		scanf(" %s",userAddWord);
		fprintf(fp, "\n");
		fprintf(fp, "%s", userAddWord);  //make word go to file
		fclose(fp);
		FILE *fp = fopen("wordList.txt", "r+");
		printf("Your word has been added.\n Would you like to add another word? (Type 'p' or 'a')\n");
		scanf(" %c", &playOrAdd);
	}

	while(playOrAdd == 'p'){
	printf("What would you like your minimum word length to be?\n");
	scanf(" %d", &minWordLength);
}

while(wordLeft > 0){ //create something so that the board can be created and 
//prints every time that the word does not reach the bottom of the board

//some for loop to keep the word count going down by 1 when a word appears
	for(int i = ; i < 0; i --){ //incomplete for loop, need i to be how many words

	}
	}

//create something to stop the program once the word touches the bottom of the board
return 0;
}



void generateWord(FILE *fileName, int fileLines){
    char randomWord[50]; //Becomes the word that prints out to the board
    char thrownLine[50]; //Stores the previous lines so that they do not get put onto the board
    int randomLine = 0;
    randomLine = (rand() % 1000) + 1; //Generates which line the word will be at in the file
    /*The loop puts the values of the preceding lines into the thrownLine so it does not mix with the actual value */
    for(int i = 1; i < randomLine; i++){
        fgets(thrownLine, randomLine, fileName);
    }
    fgets(randomWord, randomLine, fileName);
    printf("%s ", randomWord); //Can be edited later to reflect how it should print on the board
}


void moveWords(){

}

void detectWord(){
	
}
